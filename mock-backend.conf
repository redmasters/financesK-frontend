server {
    listen 80;
    server_name localhost;

    # Configurações de CORS
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

    # Handle preflight requests
    location /api {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Instituições Bancárias - Todas
    location /api/v1/bank/all {
        default_type application/json;
        return 200 '[{"institutionId":1,"institutionName":"BANCO DO BRASIL","institutionLogo":null},{"institutionId":2,"institutionName":"CAIXA ECONOMICA FEDERAL","institutionLogo":null},{"institutionId":3,"institutionName":"ITAU","institutionLogo":null},{"institutionId":4,"institutionName":"BRADESCO","institutionLogo":null},{"institutionId":5,"institutionName":"SANTANDER","institutionLogo":null}]';
    }

    # Instituição Bancária por ID
    location /api/v1/bank {
        default_type application/json;
        return 200 '{"institutionId":3,"institutionName":"ITAU","institutionLogo":null}';
    }

    # Contas do usuário
    location /api/v1/accounts/user/1 {
        default_type application/json;
        return 200 '[{"accountId":1,"accountName":"Conta Corrente Principal","accountDescription":"Conta para recebimento de salário","accountType":"CONTA_CORRENTE","bankInstitutionName":"ITAU","accountCreditLimit":0.00,"accountCreditLimitFormatted":"R$ 0,00","accountStatementClosingDate":null,"accountPaymentDueDate":null,"accountStatementClosingDateFormatted":null,"accountPaymentDueDateFormatted":null,"accountCurrentBalance":1500.50,"accountCurrentBalanceFormatted":"R$ 1.500,50","accountCurrency":"BRL","userId":1,"userName":"admin","createdAt":"2025-08-01T10:00:00Z","updatedAt":null},{"accountId":2,"accountName":"Cartão de Crédito","accountDescription":"Cartão de crédito para compras","accountType":"CARTAO_CREDITO","bankInstitutionName":"ITAU","accountCreditLimit":5000.00,"accountCreditLimitFormatted":"R$ 5.000,00","accountStatementClosingDate":5,"accountPaymentDueDate":15,"accountStatementClosingDateFormatted":"05/09/2025","accountPaymentDueDateFormatted":"15/09/2025","accountCurrentBalance":-800.00,"accountCurrentBalanceFormatted":"R$ -800,00","accountCurrency":"BRL","userId":1,"userName":"admin","createdAt":"2025-08-01T10:00:00Z","updatedAt":"2025-08-15T14:30:00Z"}]';
    }

    # Categorias
    location /api/v1/categories {
        default_type application/json;
        return 200 '[{"id":1,"name":"Alimentação","icon":"fas fa-utensils","color":"#22c55e","parentId":null},{"id":2,"name":"Transporte","icon":"fas fa-car","color":"#3b82f6","parentId":null},{"id":3,"name":"Saúde","icon":"fas fa-heart","color":"#ef4444","parentId":null},{"id":4,"name":"Lazer","icon":"fas fa-gamepad","color":"#8b5cf6","parentId":null},{"id":5,"name":"Salário","icon":"fas fa-money-bill","color":"#10b981","parentId":null}]';
    }

    # Busca de transações com paginação
    location /api/v1/transactions/search {
        default_type application/json;
        return 200 'ssss';
    }

    # Transação por ID
    location /api/v1/transactions/1 {
        default_type application/json;
        return 200 '{"id":1,"description":"Supermercado","amount":85.50,"amountFormatted":"R$ 85,50","downPayment":null,"downPaymentFormatted":"R$ 0,00","type":"EXPENSE","operationType":"PAYMENT","status":"PAID","categoryId":1,"categoryName":"Alimentação","dueDate":"2025-08-15","createdAt":"2025-08-15T10:30:00Z","updatedAt":null,"notes":"Compras da semana","recurrencePattern":null,"installmentInfo":null,"userId":1,"accountId":1,"accountName":"Conta Corrente Principal"}';
    }

    # Criar transação (POST)
    location /api/v1/transactions {
        if ($request_method = POST) {
            default_type application/json;
            return 201 '{"id":999,"message":"Transaction created successfully","createdAt":"2025-08-18T12:00:00Z"}';
        }
    }

    # Criar conta (POST)
    location /api/v1/accounts {
        if ($request_method = POST) {
            default_type application/json;
            return 201 '{"id":999,"message":"Account created successfully","createdAt":"2025-08-18T12:00:00Z"}';
        }
    }

    # Criar categoria (POST)
    location /api/v1/categories {
        if ($request_method = POST) {
            default_type application/json;
            return 201 '{"id":999,"message":"Category created successfully","createdAt":"2025-08-18T12:00:00Z"}';
        }
    }

    # Health check
    location /health {
        default_type application/json;
        return 200 '{"status":"healthy","service":"financesK-mock-backend","timestamp":"2025-08-18T12:00:00Z"}';
    }

    # Root
    location / {
        default_type application/json;
        return 200 '{"message":"FinancesK Mock Backend","version":"1.0.0","status":"running"}';
    }
}
